Object subclass: #Pile	instanceVariableNames: 'contenu index capacite'	classVariableNames: 'tailleDefaut'	package: 'HAI931'!!Pile methodsFor: 'accessing' stamp: 'initialize 9/19/2022 15:54'!top	^contenu  at: 1! !!Pile methodsFor: 'printing' stamp: 'initialize 9/19/2022 15:58'!printOn: aStream aStream nextPutAll: 'une Pile, de taille: '. capacite printOn: aStream. aStream nextPutAll: ' contenant: '. index printOn: aStream. aStream nextPutAll: ' objets : ('. contenu do: [ :each | each printOn: aStream. aStream space ].! !!Pile methodsFor: 'removing' stamp: 'initialize 9/19/2022 16:18'!pop	| retour |	self isEmpty	ifFalse: [ 		retour := contenu at: index.		contenu at: index put: nil.		index := index-1.		^retour		 ]	ifTrue: [ self error:'Pile vide, Impossible de dépiler' ]! !!Pile methodsFor: 'initialization' stamp: 'initialize 9/19/2022 15:33'!initialize: taille "la pile est vide quand index = 0" index := 0. "la pile est pleine quand index = capacite" capacite := taille. "le contenu est stocké dans un tableau" contenu := Array new: capacite. "pour les tests, enlever le commentaire quand isEmpty est écrite" "self assert: (self isEmpty)."! !!Pile methodsFor: 'adding' stamp: 'initialize 9/19/2022 16:14'!push: unObjet		contenu at: index+1 put: unObjet.		index := index +1! !!Pile methodsFor: 'testing' stamp: 'initialize 9/19/2022 15:20'!isEmpty	^index = 0! !!Pile methodsFor: 'testing' stamp: 'initialize 9/19/2022 15:35'!isFull	^index=capacite ! !